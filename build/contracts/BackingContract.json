{
  "contractName": "BackingContract",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "backedTokenAddress",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "backedToken",
      "outputs": [
        {
          "internalType": "contract BackedToken",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "balanceForBacking",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "ethAmount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"backedTokenAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":true,\"inputs\":[],\"name\":\"backedToken\",\"outputs\":[{\"internalType\":\"contract BackedToken\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"balanceForBacking\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ethAmount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Rosco Kalis <roscokalis@gmail.com>\",\"methods\":{\"constructor\":{\"params\":{\"backedTokenAddress\":\"The address of the deployed backed token.\"}},\"deposit()\":{\"details\":\"Funds are added to balanceForBacking as well.\"},\"withdraw(uint256)\":{\"details\":\"Funds are removed from balanceForBacking as well.\",\"params\":{\"ethAmount\":\"The amount of eth to withdraw.\"}}},\"title\":\"BackingContract\"},\"userdoc\":{\"methods\":{\"constructor\":\"Sets the backed token and backs it.\",\"deposit()\":{\"notice\":\"Allows the backed token to deposit funds into the contract.\"},\"withdraw(uint256)\":{\"notice\":\"Allows the backed token to withdraw funds from the contract.\"}}}},\"settings\":{\"compilationTarget\":{\"project:/contracts/BackingContract.sol\":\"BackingContract\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/GSN/Context.sol\":{\"keccak256\":\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\",\"urls\":[\"bzz-raw://216ef9d6b614db4eb46970b4e84903f2534a45572dd30a79f0041f1a5830f436\",\"dweb:/ipfs/QmNPrJ4MWKUAWzKXpUqeyKRUfosaoANZAqXgvepdrCwZAG\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xb15af804e2bc97db51e4e103f13de9fe13f87e6b835d7a88c897966c0e58506e\",\"urls\":[\"bzz-raw://1e8cff8437557fc915a3bed968fcd8f2df9809599e665ef69c2c9ce628548055\",\"dweb:/ipfs/QmP5spYP8vs2jvLF8zNrXUbqB79hMsoEvMHiLcBxerWKcm\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzz-raw://59fd025151435da35faa8093a5c7a17de02de9d08ad27275c5cdf05050820d91\",\"dweb:/ipfs/QmQMvwEcPhoRXzbXyrdoeRtvLoifUW9Qh7Luho7bmUPRkc\"]},\"project:/contracts/BackedToken.sol\":{\"keccak256\":\"0xf7a0c6f859e727f6e2343a86d757277bfc724d9f92fb995440dc7bb21ece6ac3\",\"urls\":[\"bzz-raw://6a16c0ba23fccbd54ede713572faa67ee2460398a80070a3254bc3594c35a7a1\",\"dweb:/ipfs/QmTADU1R787DacoMtdLrqVMn2FkLX7vK26iqisCjjNsqtx\"]},\"project:/contracts/BackingContract.sol\":{\"keccak256\":\"0x808d92773f96fb69591c4efba08e1276fcb2f23278afea92247bd43be3d10939\",\"urls\":[\"bzz-raw://226dfc47105427eec8007d8717a8578515d839d97c303626d910ea15f757345f\",\"dweb:/ipfs/Qme52VqvHMYh7UagghGycEpFCJTqXdYdvFuSGwqzyc6dpT\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405161079b38038061079b8339818101604052602081101561003357600080fd5b8101908080519060200190929190505050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d63fedc5306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b15801561012457600080fd5b505af1158015610138573d6000803e3d6000fd5b505050505061064f8061014c6000396000f3fe60806040526004361061003f5760003560e01c80632e1a7d4d1461005c5780638e6b523e146100975780639a26c0c4146100ee578063d0e30db014610119575b6100543460015461012390919063ffffffff16565b600181905550005b34801561006857600080fd5b506100956004803603602081101561007f57600080fd5b81019080803590602001909291905050506101ab565b005b3480156100a357600080fd5b506100ac6103a4565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156100fa57600080fd5b506101036103c9565b6040518082815260200191505060405180910390f35b6101216103cf565b005b6000808284019050838110156101a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610250576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f8152602001806105ca602f913960400191505060405180910390fd5b478111156102a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806105f96022913960400191505060405180910390fd5b600154811115610304576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061059c602e913960400191505060405180910390fd5b6103198160015461049190919063ffffffff16565b6001819055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b15801561038857600080fd5b505af115801561039c573d6000803e3d6000fd5b505050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610474576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f8152602001806105ca602f913960400191505060405180910390fd5b6104893460015461012390919063ffffffff16565b600181905550565b60006104d383836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506104db565b905092915050565b6000838311158290610588576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561054d578082015181840152602081019050610532565b50505050905090810190601f16801561057a5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838503905080915050939250505056fe43616e206e6f74207769746864726177206d6f7265207468616e2062616c616e636520666f72206261636b696e6743616e206f6e6c792062652063616c6c656420627920746865206261636b656420746f6b656e20636f6e747261637443616e206e6f74207769746864726177206d6f7265207468616e2062616c616e6365a265627a7a72315820015b739a7f5539280c74cbb6cce81b18186635f5c971311f9b5a8d5880bf4d2464736f6c63430005100032",
  "deployedBytecode": "0x60806040526004361061003f5760003560e01c80632e1a7d4d1461005c5780638e6b523e146100975780639a26c0c4146100ee578063d0e30db014610119575b6100543460015461012390919063ffffffff16565b600181905550005b34801561006857600080fd5b506100956004803603602081101561007f57600080fd5b81019080803590602001909291905050506101ab565b005b3480156100a357600080fd5b506100ac6103a4565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156100fa57600080fd5b506101036103c9565b6040518082815260200191505060405180910390f35b6101216103cf565b005b6000808284019050838110156101a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610250576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f8152602001806105ca602f913960400191505060405180910390fd5b478111156102a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806105f96022913960400191505060405180910390fd5b600154811115610304576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061059c602e913960400191505060405180910390fd5b6103198160015461049190919063ffffffff16565b6001819055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b15801561038857600080fd5b505af115801561039c573d6000803e3d6000fd5b505050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610474576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f8152602001806105ca602f913960400191505060405180910390fd5b6104893460015461012390919063ffffffff16565b600181905550565b60006104d383836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506104db565b905092915050565b6000838311158290610588576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561054d578082015181840152602081019050610532565b50505050905090810190601f16801561057a5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838503905080915050939250505056fe43616e206e6f74207769746864726177206d6f7265207468616e2062616c616e636520666f72206261636b696e6743616e206f6e6c792062652063616c6c656420627920746865206261636b656420746f6b656e20636f6e747261637443616e206e6f74207769746864726177206d6f7265207468616e2062616c616e6365a265627a7a72315820015b739a7f5539280c74cbb6cce81b18186635f5c971311f9b5a8d5880bf4d2464736f6c63430005100032",
  "sourceMap": "203:1703:8:-;;;862:161;8:9:-1;5:2;;;30:1;27;20:12;5:2;862:161:8;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;862:161:8;;;;;;;;;;;;;;;;954:18;928:11;;:45;;;;;;;;;;;;;;;;;;984:11;;;;;;;;;;;:16;;;1009:4;984:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;984:31:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;984:31:8;;;;862:161;203:1703;;;;;;",
  "deployedSourceMap": "203:1703:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;668:32;690:9;668:17;;:21;;:32;;;;:::i;:::-;648:17;:52;;;;203:1703;1529:374;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1529:374:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1529:374:8;;;;;;;;;;;;;;;;;:::i;:::-;;270:30;;8:9:-1;5:2;;;30:1;27;20:12;5:2;270:30:8;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;307:32;;8:9:-1;5:2;;;30:1;27;20:12;5:2;307:32:8;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1184:123;;;:::i;:::-;;834:176:4;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;1529:374:8:-;416:11;;;;;;;;;;;394:34;;:10;:34;;;386:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1623:21;1610:9;:34;;1602:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1715:17;;1702:9;:30;;1694:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1814:32;1836:9;1814:17;;:21;;:32;;;;:::i;:::-;1794:17;:52;;;;1857:11;;;;;;;;;;;:19;;;1883:9;1857:38;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1857:38:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1857:38:8;;;;;1529:374;:::o;270:30::-;;;;;;;;;;;;;:::o;307:32::-;;;;:::o;1184:123::-;416:11;;;;;;;;;;;394:34;;:10;:34;;;386:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1267:32;1289:9;1267:17;;:21;;:32;;;;:::i;:::-;1247:17;:52;;;;1184:123::o;1274:134:4:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;1732:187::-;1818:7;1850:1;1845;:6;;1853:12;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1837:29:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1876:9;1892:1;1888;:5;1876:17;;1911:1;1904:8;;;1732:187;;;;;:::o",
  "source": "pragma solidity ^0.5.0;\r\n\r\nimport \"./BackedToken.sol\";\r\nimport \"openzeppelin-solidity/contracts/math/SafeMath.sol\";\r\n\r\n/**\r\n * @title BackingContract\r\n * @author Rosco Kalis <roscokalis@gmail.com>\r\n */\r\ncontract BackingContract {\r\n    using SafeMath for uint256;\r\n\r\n    BackedToken public backedToken;\r\n    uint256 public balanceForBacking;\r\n\r\n    modifier onlyBackedToken() {\r\n        require(msg.sender == address(backedToken), \"Can only be called by the backed token contract\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Fallback payable function, adding the new funds to balanceForBacking.\r\n     */\r\n    function() external payable {\r\n        balanceForBacking = balanceForBacking.add(msg.value);\r\n    }\r\n\r\n    /**\r\n     * @notice Sets the backed token and backs it.\r\n     * @param backedTokenAddress The address of the deployed backed token.\r\n     */\r\n    constructor(address payable backedTokenAddress) public {\r\n        backedToken = BackedToken(backedTokenAddress);\r\n        backedToken.back(address(this));\r\n    }\r\n\r\n    /**\r\n     * @notice Allows the backed token to deposit funds into the contract.\r\n     * @dev Funds are added to balanceForBacking as well.\r\n     */\r\n    function deposit() external payable onlyBackedToken {\r\n        balanceForBacking = balanceForBacking.add(msg.value);\r\n    }\r\n\r\n    /**\r\n     * @notice Allows the backed token to withdraw funds from the contract.\r\n     * @dev Funds are removed from balanceForBacking as well.\r\n     * @param ethAmount The amount of eth to withdraw.\r\n     */\r\n    function withdraw(uint256 ethAmount) external onlyBackedToken {\r\n        require(ethAmount <= address(this).balance, \"Can not withdraw more than balance\");\r\n        require(ethAmount <= balanceForBacking, \"Can not withdraw more than balance for backing\");\r\n        balanceForBacking = balanceForBacking.sub(ethAmount);\r\n        backedToken.deposit.value(ethAmount)();\r\n    }\r\n}\r\n",
  "sourcePath": "D:\\MyData\\mywork\\Tasks\\angular\\2022-2-19\\ethroulette\\contracts\\BackingContract.sol",
  "ast": {
    "absolutePath": "project:/contracts/BackingContract.sol",
    "exportedSymbols": {
      "BackingContract": [
        1366
      ]
    },
    "id": 1367,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1255,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:8"
      },
      {
        "absolutePath": "project:/contracts/BackedToken.sol",
        "file": "./BackedToken.sol",
        "id": 1256,
        "nodeType": "ImportDirective",
        "scope": 1367,
        "sourceUnit": 1254,
        "src": "27:27:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 1257,
        "nodeType": "ImportDirective",
        "scope": 1367,
        "sourceUnit": 490,
        "src": "56:59:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title BackingContract\n@author Rosco Kalis <roscokalis@gmail.com>",
        "fullyImplemented": true,
        "id": 1366,
        "linearizedBaseContracts": [
          1366
        ],
        "name": "BackingContract",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1260,
            "libraryName": {
              "contractScope": null,
              "id": 1258,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 489,
              "src": "241:8:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$489",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "235:27:8",
            "typeName": {
              "id": 1259,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "254:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 1262,
            "name": "backedToken",
            "nodeType": "VariableDeclaration",
            "scope": 1366,
            "src": "270:30:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_BackedToken_$1253",
              "typeString": "contract BackedToken"
            },
            "typeName": {
              "contractScope": null,
              "id": 1261,
              "name": "BackedToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1253,
              "src": "270:11:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BackedToken_$1253",
                "typeString": "contract BackedToken"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1264,
            "name": "balanceForBacking",
            "nodeType": "VariableDeclaration",
            "scope": 1366,
            "src": "307:32:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1263,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "307:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1277,
              "nodeType": "Block",
              "src": "375:125:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 1272,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1267,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8095,
                            "src": "394:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1268,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "394:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1270,
                              "name": "backedToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1262,
                              "src": "416:11:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BackedToken_$1253",
                                "typeString": "contract BackedToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_BackedToken_$1253",
                                "typeString": "contract BackedToken"
                              }
                            ],
                            "id": 1269,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "408:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 1271,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "408:20:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "394:34:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "43616e206f6e6c792062652063616c6c656420627920746865206261636b656420746f6b656e20636f6e7472616374",
                        "id": 1273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "430:49:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1a8040178102a57b6347460cfb7aeb825c69721c08cfdf7965d13c298e2ffc63",
                          "typeString": "literal_string \"Can only be called by the backed token contract\""
                        },
                        "value": "Can only be called by the backed token contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1a8040178102a57b6347460cfb7aeb825c69721c08cfdf7965d13c298e2ffc63",
                          "typeString": "literal_string \"Can only be called by the backed token contract\""
                        }
                      ],
                      "id": 1266,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8098,
                        8099
                      ],
                      "referencedDeclaration": 8099,
                      "src": "386:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "386:94:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1275,
                  "nodeType": "ExpressionStatement",
                  "src": "386:94:8"
                },
                {
                  "id": 1276,
                  "nodeType": "PlaceholderStatement",
                  "src": "491:1:8"
                }
              ]
            },
            "documentation": null,
            "id": 1278,
            "name": "onlyBackedToken",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1265,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "372:2:8"
            },
            "src": "348:152:8",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1289,
              "nodeType": "Block",
              "src": "637:71:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1281,
                      "name": "balanceForBacking",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1264,
                      "src": "648:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1284,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8095,
                            "src": "690:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1285,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "690:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 1282,
                          "name": "balanceForBacking",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1264,
                          "src": "668:17:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1283,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 329,
                        "src": "668:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1286,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "668:32:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "648:52:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1288,
                  "nodeType": "ExpressionStatement",
                  "src": "648:52:8"
                }
              ]
            },
            "documentation": "@dev Fallback payable function, adding the new funds to balanceForBacking.",
            "id": 1290,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1279,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "617:2:8"
            },
            "returnParameters": {
              "id": 1280,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "637:0:8"
            },
            "scope": 1366,
            "src": "609:99:8",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1309,
              "nodeType": "Block",
              "src": "917:106:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1295,
                      "name": "backedToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1262,
                      "src": "928:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BackedToken_$1253",
                        "typeString": "contract BackedToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1297,
                          "name": "backedTokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1292,
                          "src": "954:18:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 1296,
                        "name": "BackedToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1253,
                        "src": "942:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_BackedToken_$1253_$",
                          "typeString": "type(contract BackedToken)"
                        }
                      },
                      "id": 1298,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "942:31:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BackedToken_$1253",
                        "typeString": "contract BackedToken"
                      }
                    },
                    "src": "928:45:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BackedToken_$1253",
                      "typeString": "contract BackedToken"
                    }
                  },
                  "id": 1300,
                  "nodeType": "ExpressionStatement",
                  "src": "928:45:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1305,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8123,
                            "src": "1009:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BackingContract_$1366",
                              "typeString": "contract BackingContract"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BackingContract_$1366",
                              "typeString": "contract BackingContract"
                            }
                          ],
                          "id": 1304,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1001:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 1306,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1001:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1301,
                        "name": "backedToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1262,
                        "src": "984:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BackedToken_$1253",
                          "typeString": "contract BackedToken"
                        }
                      },
                      "id": 1303,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "back",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1073,
                      "src": "984:16:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_payable_$returns$__$",
                        "typeString": "function (address payable) external"
                      }
                    },
                    "id": 1307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "984:31:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1308,
                  "nodeType": "ExpressionStatement",
                  "src": "984:31:8"
                }
              ]
            },
            "documentation": "@notice Sets the backed token and backs it.\n@param backedTokenAddress The address of the deployed backed token.",
            "id": 1310,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1293,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1292,
                  "name": "backedTokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1310,
                  "src": "874:34:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 1291,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "874:15:8",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "873:36:8"
            },
            "returnParameters": {
              "id": 1294,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "917:0:8"
            },
            "scope": 1366,
            "src": "862:161:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1323,
              "nodeType": "Block",
              "src": "1236:71:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1315,
                      "name": "balanceForBacking",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1264,
                      "src": "1247:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1318,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8095,
                            "src": "1289:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1319,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1289:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 1316,
                          "name": "balanceForBacking",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1264,
                          "src": "1267:17:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 329,
                        "src": "1267:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1320,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1267:32:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1247:52:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1322,
                  "nodeType": "ExpressionStatement",
                  "src": "1247:52:8"
                }
              ]
            },
            "documentation": "@notice Allows the backed token to deposit funds into the contract.\n@dev Funds are added to balanceForBacking as well.",
            "id": 1324,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1313,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1312,
                  "name": "onlyBackedToken",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1278,
                  "src": "1220:15:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1220:15:8"
              }
            ],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1311,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1200:2:8"
            },
            "returnParameters": {
              "id": 1314,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1236:0:8"
            },
            "scope": 1366,
            "src": "1184:123:8",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1364,
              "nodeType": "Block",
              "src": "1591:312:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1337,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1332,
                          "name": "ethAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1326,
                          "src": "1610:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1334,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8123,
                                "src": "1631:4:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BackingContract_$1366",
                                  "typeString": "contract BackingContract"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BackingContract_$1366",
                                  "typeString": "contract BackingContract"
                                }
                              ],
                              "id": 1333,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1623:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 1335,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1623:13:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "id": 1336,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1623:21:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1610:34:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "43616e206e6f74207769746864726177206d6f7265207468616e2062616c616e6365",
                        "id": 1338,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1646:36:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_21d99b6f56dcd444084ada2298806d8ea472a84af319ebb28f2c070370250e3f",
                          "typeString": "literal_string \"Can not withdraw more than balance\""
                        },
                        "value": "Can not withdraw more than balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_21d99b6f56dcd444084ada2298806d8ea472a84af319ebb28f2c070370250e3f",
                          "typeString": "literal_string \"Can not withdraw more than balance\""
                        }
                      ],
                      "id": 1331,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8098,
                        8099
                      ],
                      "referencedDeclaration": 8099,
                      "src": "1602:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1602:81:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1340,
                  "nodeType": "ExpressionStatement",
                  "src": "1602:81:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1344,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1342,
                          "name": "ethAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1326,
                          "src": "1702:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1343,
                          "name": "balanceForBacking",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1264,
                          "src": "1715:17:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1702:30:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "43616e206e6f74207769746864726177206d6f7265207468616e2062616c616e636520666f72206261636b696e67",
                        "id": 1345,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1734:48:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1775f931df787794705b317822a2bfd090ff5497a2efff7a24cd686e36098d51",
                          "typeString": "literal_string \"Can not withdraw more than balance for backing\""
                        },
                        "value": "Can not withdraw more than balance for backing"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1775f931df787794705b317822a2bfd090ff5497a2efff7a24cd686e36098d51",
                          "typeString": "literal_string \"Can not withdraw more than balance for backing\""
                        }
                      ],
                      "id": 1341,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8098,
                        8099
                      ],
                      "referencedDeclaration": 8099,
                      "src": "1694:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1694:89:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1347,
                  "nodeType": "ExpressionStatement",
                  "src": "1694:89:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1348,
                      "name": "balanceForBacking",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1264,
                      "src": "1794:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1351,
                          "name": "ethAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1326,
                          "src": "1836:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 1349,
                          "name": "balanceForBacking",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1264,
                          "src": "1814:17:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1350,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 345,
                        "src": "1814:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1352,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1814:32:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1794:52:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1354,
                  "nodeType": "ExpressionStatement",
                  "src": "1794:52:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1360,
                          "name": "ethAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1326,
                          "src": "1883:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1355,
                            "name": "backedToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1262,
                            "src": "1857:11:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BackedToken_$1253",
                              "typeString": "contract BackedToken"
                            }
                          },
                          "id": 1358,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "deposit",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1059,
                          "src": "1857:19:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_payable$__$returns$__$",
                            "typeString": "function () payable external"
                          }
                        },
                        "id": 1359,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1857:25:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_setvalue_pure$_t_uint256_$returns$_t_function_external_payable$__$returns$__$value_$",
                          "typeString": "function (uint256) pure returns (function () payable external)"
                        }
                      },
                      "id": 1361,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1857:36:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 1362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1857:38:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1363,
                  "nodeType": "ExpressionStatement",
                  "src": "1857:38:8"
                }
              ]
            },
            "documentation": "@notice Allows the backed token to withdraw funds from the contract.\n@dev Funds are removed from balanceForBacking as well.\n@param ethAmount The amount of eth to withdraw.",
            "id": 1365,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1329,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1328,
                  "name": "onlyBackedToken",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1278,
                  "src": "1575:15:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1575:15:8"
              }
            ],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1327,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1326,
                  "name": "ethAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1365,
                  "src": "1547:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1325,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1547:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1546:19:8"
            },
            "returnParameters": {
              "id": 1330,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1591:0:8"
            },
            "scope": 1366,
            "src": "1529:374:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 1367,
        "src": "203:1703:8"
      }
    ],
    "src": "0:1908:8"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/BackingContract.sol",
      "exportedSymbols": {
        "BackingContract": [
          1366
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.5",
            ".0"
          ]
        },
        "id": 1255,
        "name": "PragmaDirective",
        "src": "0:23:8"
      },
      {
        "attributes": {
          "SourceUnit": 1254,
          "absolutePath": "project:/contracts/BackedToken.sol",
          "file": "./BackedToken.sol",
          "scope": 1367,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 1256,
        "name": "ImportDirective",
        "src": "27:27:8"
      },
      {
        "attributes": {
          "SourceUnit": 490,
          "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
          "file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
          "scope": 1367,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 1257,
        "name": "ImportDirective",
        "src": "56:59:8"
      },
      {
        "attributes": {
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "contract",
          "documentation": "@title BackingContract\n@author Rosco Kalis <roscokalis@gmail.com>",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            1366
          ],
          "name": "BackingContract",
          "scope": 1367
        },
        "children": [
          {
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "SafeMath",
                  "referencedDeclaration": 489,
                  "type": "library SafeMath"
                },
                "id": 1258,
                "name": "UserDefinedTypeName",
                "src": "241:8:8"
              },
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 1259,
                "name": "ElementaryTypeName",
                "src": "254:7:8"
              }
            ],
            "id": 1260,
            "name": "UsingForDirective",
            "src": "235:27:8"
          },
          {
            "attributes": {
              "constant": false,
              "name": "backedToken",
              "scope": 1366,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract BackedToken",
              "value": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "BackedToken",
                  "referencedDeclaration": 1253,
                  "type": "contract BackedToken"
                },
                "id": 1261,
                "name": "UserDefinedTypeName",
                "src": "270:11:8"
              }
            ],
            "id": 1262,
            "name": "VariableDeclaration",
            "src": "270:30:8"
          },
          {
            "attributes": {
              "constant": false,
              "name": "balanceForBacking",
              "scope": 1366,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "value": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 1263,
                "name": "ElementaryTypeName",
                "src": "307:7:8"
              }
            ],
            "id": 1264,
            "name": "VariableDeclaration",
            "src": "307:32:8"
          },
          {
            "attributes": {
              "documentation": null,
              "name": "onlyBackedToken",
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1265,
                "name": "ParameterList",
                "src": "372:2:8"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_1a8040178102a57b6347460cfb7aeb825c69721c08cfdf7965d13c298e2ffc63",
                                  "typeString": "literal_string \"Can only be called by the backed token contract\""
                                }
                              ],
                              "overloadedDeclarations": [
                                8098,
                                8099
                              ],
                              "referencedDeclaration": 8099,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 1266,
                            "name": "Identifier",
                            "src": "386:7:8"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 8095,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 1267,
                                    "name": "Identifier",
                                    "src": "394:3:8"
                                  }
                                ],
                                "id": 1268,
                                "name": "MemberAccess",
                                "src": "394:10:8"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "address payable",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_BackedToken_$1253",
                                          "typeString": "contract BackedToken"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(address)",
                                      "value": "address"
                                    },
                                    "id": 1269,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "408:7:8"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1262,
                                      "type": "contract BackedToken",
                                      "value": "backedToken"
                                    },
                                    "id": 1270,
                                    "name": "Identifier",
                                    "src": "416:11:8"
                                  }
                                ],
                                "id": 1271,
                                "name": "FunctionCall",
                                "src": "408:20:8"
                              }
                            ],
                            "id": 1272,
                            "name": "BinaryOperation",
                            "src": "394:34:8"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "43616e206f6e6c792062652063616c6c656420627920746865206261636b656420746f6b656e20636f6e7472616374",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Can only be called by the backed token contract\"",
                              "value": "Can only be called by the backed token contract"
                            },
                            "id": 1273,
                            "name": "Literal",
                            "src": "430:49:8"
                          }
                        ],
                        "id": 1274,
                        "name": "FunctionCall",
                        "src": "386:94:8"
                      }
                    ],
                    "id": 1275,
                    "name": "ExpressionStatement",
                    "src": "386:94:8"
                  },
                  {
                    "id": 1276,
                    "name": "PlaceholderStatement",
                    "src": "491:1:8"
                  }
                ],
                "id": 1277,
                "name": "Block",
                "src": "375:125:8"
              }
            ],
            "id": 1278,
            "name": "ModifierDefinition",
            "src": "348:152:8"
          },
          {
            "attributes": {
              "documentation": "@dev Fallback payable function, adding the new funds to balanceForBacking.",
              "implemented": true,
              "isConstructor": false,
              "kind": "fallback",
              "modifiers": [
                null
              ],
              "name": "",
              "scope": 1366,
              "stateMutability": "payable",
              "superFunction": null,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1279,
                "name": "ParameterList",
                "src": "617:2:8"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1280,
                "name": "ParameterList",
                "src": "637:0:8"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1264,
                              "type": "uint256",
                              "value": "balanceForBacking"
                            },
                            "id": 1281,
                            "name": "Identifier",
                            "src": "648:17:8"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "uint256",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "add",
                                  "referencedDeclaration": 329,
                                  "type": "function (uint256,uint256) pure returns (uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1264,
                                      "type": "uint256",
                                      "value": "balanceForBacking"
                                    },
                                    "id": 1282,
                                    "name": "Identifier",
                                    "src": "668:17:8"
                                  }
                                ],
                                "id": 1283,
                                "name": "MemberAccess",
                                "src": "668:21:8"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "value",
                                  "referencedDeclaration": null,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 8095,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 1284,
                                    "name": "Identifier",
                                    "src": "690:3:8"
                                  }
                                ],
                                "id": 1285,
                                "name": "MemberAccess",
                                "src": "690:9:8"
                              }
                            ],
                            "id": 1286,
                            "name": "FunctionCall",
                            "src": "668:32:8"
                          }
                        ],
                        "id": 1287,
                        "name": "Assignment",
                        "src": "648:52:8"
                      }
                    ],
                    "id": 1288,
                    "name": "ExpressionStatement",
                    "src": "648:52:8"
                  }
                ],
                "id": 1289,
                "name": "Block",
                "src": "637:71:8"
              }
            ],
            "id": 1290,
            "name": "FunctionDefinition",
            "src": "609:99:8"
          },
          {
            "attributes": {
              "documentation": "@notice Sets the backed token and backs it.\n@param backedTokenAddress The address of the deployed backed token.",
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "modifiers": [
                null
              ],
              "name": "",
              "scope": 1366,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "backedTokenAddress",
                      "scope": 1310,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address payable",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "payable",
                          "type": "address payable"
                        },
                        "id": 1291,
                        "name": "ElementaryTypeName",
                        "src": "874:15:8"
                      }
                    ],
                    "id": 1292,
                    "name": "VariableDeclaration",
                    "src": "874:34:8"
                  }
                ],
                "id": 1293,
                "name": "ParameterList",
                "src": "873:36:8"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1294,
                "name": "ParameterList",
                "src": "917:0:8"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "contract BackedToken"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1262,
                              "type": "contract BackedToken",
                              "value": "backedToken"
                            },
                            "id": 1295,
                            "name": "Identifier",
                            "src": "928:11:8"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "contract BackedToken",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1253,
                                  "type": "type(contract BackedToken)",
                                  "value": "BackedToken"
                                },
                                "id": 1296,
                                "name": "Identifier",
                                "src": "942:11:8"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1292,
                                  "type": "address payable",
                                  "value": "backedTokenAddress"
                                },
                                "id": 1297,
                                "name": "Identifier",
                                "src": "954:18:8"
                              }
                            ],
                            "id": 1298,
                            "name": "FunctionCall",
                            "src": "942:31:8"
                          }
                        ],
                        "id": 1299,
                        "name": "Assignment",
                        "src": "928:45:8"
                      }
                    ],
                    "id": 1300,
                    "name": "ExpressionStatement",
                    "src": "928:45:8"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "back",
                              "referencedDeclaration": 1073,
                              "type": "function (address payable) external"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1262,
                                  "type": "contract BackedToken",
                                  "value": "backedToken"
                                },
                                "id": 1301,
                                "name": "Identifier",
                                "src": "984:11:8"
                              }
                            ],
                            "id": 1303,
                            "name": "MemberAccess",
                            "src": "984:16:8"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "address payable",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_BackingContract_$1366",
                                      "typeString": "contract BackingContract"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)",
                                  "value": "address"
                                },
                                "id": 1304,
                                "name": "ElementaryTypeNameExpression",
                                "src": "1001:7:8"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 8123,
                                  "type": "contract BackingContract",
                                  "value": "this"
                                },
                                "id": 1305,
                                "name": "Identifier",
                                "src": "1009:4:8"
                              }
                            ],
                            "id": 1306,
                            "name": "FunctionCall",
                            "src": "1001:13:8"
                          }
                        ],
                        "id": 1307,
                        "name": "FunctionCall",
                        "src": "984:31:8"
                      }
                    ],
                    "id": 1308,
                    "name": "ExpressionStatement",
                    "src": "984:31:8"
                  }
                ],
                "id": 1309,
                "name": "Block",
                "src": "917:106:8"
              }
            ],
            "id": 1310,
            "name": "FunctionDefinition",
            "src": "862:161:8"
          },
          {
            "attributes": {
              "documentation": "@notice Allows the backed token to deposit funds into the contract.\n@dev Funds are added to balanceForBacking as well.",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "deposit",
              "scope": 1366,
              "stateMutability": "payable",
              "superFunction": null,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1311,
                "name": "ParameterList",
                "src": "1200:2:8"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1314,
                "name": "ParameterList",
                "src": "1236:0:8"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 1278,
                      "type": "modifier ()",
                      "value": "onlyBackedToken"
                    },
                    "id": 1312,
                    "name": "Identifier",
                    "src": "1220:15:8"
                  }
                ],
                "id": 1313,
                "name": "ModifierInvocation",
                "src": "1220:15:8"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1264,
                              "type": "uint256",
                              "value": "balanceForBacking"
                            },
                            "id": 1315,
                            "name": "Identifier",
                            "src": "1247:17:8"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "uint256",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "add",
                                  "referencedDeclaration": 329,
                                  "type": "function (uint256,uint256) pure returns (uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1264,
                                      "type": "uint256",
                                      "value": "balanceForBacking"
                                    },
                                    "id": 1316,
                                    "name": "Identifier",
                                    "src": "1267:17:8"
                                  }
                                ],
                                "id": 1317,
                                "name": "MemberAccess",
                                "src": "1267:21:8"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "value",
                                  "referencedDeclaration": null,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 8095,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 1318,
                                    "name": "Identifier",
                                    "src": "1289:3:8"
                                  }
                                ],
                                "id": 1319,
                                "name": "MemberAccess",
                                "src": "1289:9:8"
                              }
                            ],
                            "id": 1320,
                            "name": "FunctionCall",
                            "src": "1267:32:8"
                          }
                        ],
                        "id": 1321,
                        "name": "Assignment",
                        "src": "1247:52:8"
                      }
                    ],
                    "id": 1322,
                    "name": "ExpressionStatement",
                    "src": "1247:52:8"
                  }
                ],
                "id": 1323,
                "name": "Block",
                "src": "1236:71:8"
              }
            ],
            "id": 1324,
            "name": "FunctionDefinition",
            "src": "1184:123:8"
          },
          {
            "attributes": {
              "documentation": "@notice Allows the backed token to withdraw funds from the contract.\n@dev Funds are removed from balanceForBacking as well.\n@param ethAmount The amount of eth to withdraw.",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "withdraw",
              "scope": 1366,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "ethAmount",
                      "scope": 1365,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 1325,
                        "name": "ElementaryTypeName",
                        "src": "1547:7:8"
                      }
                    ],
                    "id": 1326,
                    "name": "VariableDeclaration",
                    "src": "1547:17:8"
                  }
                ],
                "id": 1327,
                "name": "ParameterList",
                "src": "1546:19:8"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1330,
                "name": "ParameterList",
                "src": "1591:0:8"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 1278,
                      "type": "modifier ()",
                      "value": "onlyBackedToken"
                    },
                    "id": 1328,
                    "name": "Identifier",
                    "src": "1575:15:8"
                  }
                ],
                "id": 1329,
                "name": "ModifierInvocation",
                "src": "1575:15:8"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_21d99b6f56dcd444084ada2298806d8ea472a84af319ebb28f2c070370250e3f",
                                  "typeString": "literal_string \"Can not withdraw more than balance\""
                                }
                              ],
                              "overloadedDeclarations": [
                                8098,
                                8099
                              ],
                              "referencedDeclaration": 8099,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 1331,
                            "name": "Identifier",
                            "src": "1602:7:8"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "<=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1326,
                                  "type": "uint256",
                                  "value": "ethAmount"
                                },
                                "id": 1332,
                                "name": "Identifier",
                                "src": "1610:9:8"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "balance",
                                  "referencedDeclaration": null,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "address payable",
                                      "type_conversion": true
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_contract$_BackingContract_$1366",
                                              "typeString": "contract BackingContract"
                                            }
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "type": "type(address)",
                                          "value": "address"
                                        },
                                        "id": 1333,
                                        "name": "ElementaryTypeNameExpression",
                                        "src": "1623:7:8"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 8123,
                                          "type": "contract BackingContract",
                                          "value": "this"
                                        },
                                        "id": 1334,
                                        "name": "Identifier",
                                        "src": "1631:4:8"
                                      }
                                    ],
                                    "id": 1335,
                                    "name": "FunctionCall",
                                    "src": "1623:13:8"
                                  }
                                ],
                                "id": 1336,
                                "name": "MemberAccess",
                                "src": "1623:21:8"
                              }
                            ],
                            "id": 1337,
                            "name": "BinaryOperation",
                            "src": "1610:34:8"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "43616e206e6f74207769746864726177206d6f7265207468616e2062616c616e6365",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Can not withdraw more than balance\"",
                              "value": "Can not withdraw more than balance"
                            },
                            "id": 1338,
                            "name": "Literal",
                            "src": "1646:36:8"
                          }
                        ],
                        "id": 1339,
                        "name": "FunctionCall",
                        "src": "1602:81:8"
                      }
                    ],
                    "id": 1340,
                    "name": "ExpressionStatement",
                    "src": "1602:81:8"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_1775f931df787794705b317822a2bfd090ff5497a2efff7a24cd686e36098d51",
                                  "typeString": "literal_string \"Can not withdraw more than balance for backing\""
                                }
                              ],
                              "overloadedDeclarations": [
                                8098,
                                8099
                              ],
                              "referencedDeclaration": 8099,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 1341,
                            "name": "Identifier",
                            "src": "1694:7:8"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "<=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1326,
                                  "type": "uint256",
                                  "value": "ethAmount"
                                },
                                "id": 1342,
                                "name": "Identifier",
                                "src": "1702:9:8"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1264,
                                  "type": "uint256",
                                  "value": "balanceForBacking"
                                },
                                "id": 1343,
                                "name": "Identifier",
                                "src": "1715:17:8"
                              }
                            ],
                            "id": 1344,
                            "name": "BinaryOperation",
                            "src": "1702:30:8"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "43616e206e6f74207769746864726177206d6f7265207468616e2062616c616e636520666f72206261636b696e67",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Can not withdraw more than balance for backing\"",
                              "value": "Can not withdraw more than balance for backing"
                            },
                            "id": 1345,
                            "name": "Literal",
                            "src": "1734:48:8"
                          }
                        ],
                        "id": 1346,
                        "name": "FunctionCall",
                        "src": "1694:89:8"
                      }
                    ],
                    "id": 1347,
                    "name": "ExpressionStatement",
                    "src": "1694:89:8"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1264,
                              "type": "uint256",
                              "value": "balanceForBacking"
                            },
                            "id": 1348,
                            "name": "Identifier",
                            "src": "1794:17:8"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "uint256",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sub",
                                  "referencedDeclaration": 345,
                                  "type": "function (uint256,uint256) pure returns (uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1264,
                                      "type": "uint256",
                                      "value": "balanceForBacking"
                                    },
                                    "id": 1349,
                                    "name": "Identifier",
                                    "src": "1814:17:8"
                                  }
                                ],
                                "id": 1350,
                                "name": "MemberAccess",
                                "src": "1814:21:8"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1326,
                                  "type": "uint256",
                                  "value": "ethAmount"
                                },
                                "id": 1351,
                                "name": "Identifier",
                                "src": "1836:9:8"
                              }
                            ],
                            "id": 1352,
                            "name": "FunctionCall",
                            "src": "1814:32:8"
                          }
                        ],
                        "id": 1353,
                        "name": "Assignment",
                        "src": "1794:52:8"
                      }
                    ],
                    "id": 1354,
                    "name": "ExpressionStatement",
                    "src": "1794:52:8"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "arguments": [
                            null
                          ],
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "function () payable external",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "value",
                                  "referencedDeclaration": null,
                                  "type": "function (uint256) pure returns (function () payable external)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "deposit",
                                      "referencedDeclaration": 1059,
                                      "type": "function () payable external"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 1262,
                                          "type": "contract BackedToken",
                                          "value": "backedToken"
                                        },
                                        "id": 1355,
                                        "name": "Identifier",
                                        "src": "1857:11:8"
                                      }
                                    ],
                                    "id": 1358,
                                    "name": "MemberAccess",
                                    "src": "1857:19:8"
                                  }
                                ],
                                "id": 1359,
                                "name": "MemberAccess",
                                "src": "1857:25:8"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1326,
                                  "type": "uint256",
                                  "value": "ethAmount"
                                },
                                "id": 1360,
                                "name": "Identifier",
                                "src": "1883:9:8"
                              }
                            ],
                            "id": 1361,
                            "name": "FunctionCall",
                            "src": "1857:36:8"
                          }
                        ],
                        "id": 1362,
                        "name": "FunctionCall",
                        "src": "1857:38:8"
                      }
                    ],
                    "id": 1363,
                    "name": "ExpressionStatement",
                    "src": "1857:38:8"
                  }
                ],
                "id": 1364,
                "name": "Block",
                "src": "1591:312:8"
              }
            ],
            "id": 1365,
            "name": "FunctionDefinition",
            "src": "1529:374:8"
          }
        ],
        "id": 1366,
        "name": "ContractDefinition",
        "src": "203:1703:8"
      }
    ],
    "id": 1367,
    "name": "SourceUnit",
    "src": "0:1908:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.5",
  "updatedAt": "2022-02-27T15:50:52.610Z",
  "devdoc": {
    "author": "Rosco Kalis <roscokalis@gmail.com>",
    "methods": {
      "constructor": {
        "params": {
          "backedTokenAddress": "The address of the deployed backed token."
        }
      },
      "deposit()": {
        "details": "Funds are added to balanceForBacking as well."
      },
      "withdraw(uint256)": {
        "details": "Funds are removed from balanceForBacking as well.",
        "params": {
          "ethAmount": "The amount of eth to withdraw."
        }
      }
    },
    "title": "BackingContract"
  },
  "userdoc": {
    "methods": {
      "constructor": "Sets the backed token and backs it.",
      "deposit()": {
        "notice": "Allows the backed token to deposit funds into the contract."
      },
      "withdraw(uint256)": {
        "notice": "Allows the backed token to withdraw funds from the contract."
      }
    }
  }
}